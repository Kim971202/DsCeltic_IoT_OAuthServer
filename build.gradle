plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
	id "com.google.osdetector" version "1.7.3"
}

group = 'com.oauth'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_11
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-tomcat'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.cloud:spring-cloud-starter-oauth2:2.2.5.RELEASE'
	implementation 'org.springframework.cloud:spring-cloud-starter-security:2.2.5.RELEASE'
	implementation 'org.springframework.security:spring-security-core:5.8.5'

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	implementation 'org.glassfish.jaxb:jaxb-runtime'
	implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'com.sun.xml.bind:jaxb-impl:2.3.1'

	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	implementation 'com.google.code.gson:gson'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'mysql:mysql-connector-java'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.2'
	runtimeOnly 'mysql:mysql-connector-java:8.0.25'

	implementation 'com.nimbusds:nimbus-jose-jwt:9.23'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-properties-migrator'
	implementation platform('org.springframework.cloud:spring-cloud-dependencies:2021.0.3')

	implementation 'org.springframework:spring-webflux:5.3.21'

	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.json:json:20210307'

	if (osdetector.arch.equals("aarch_64")) {
		implementation 'io.netty:netty-resolver-dns-native-macos:4.1.94.Final:osx-aarch_64'
	}
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
	options.encoding = 'UTF-8'
}
